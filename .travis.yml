# NB: don't set `language: haskell` here
sudo: false

matrix:
  include:
    #~ - env: CABALVER=1.16 GHCVER=7.4.2
      #~ compiler: ": #GHC 7.4.2"
      #~ addons: {apt: {packages: [cabal-install-1.16,ghc-7.4.2], sources: [hvr-ghc]}}
    #~ - env: CABALVER=1.16 GHCVER=7.6.3
      #~ compiler: ": #GHC 7.6.3"
      #~ addons: {apt: {packages: [cabal-install-1.16,ghc-7.6.3], sources: [hvr-ghc]}}
    - env: CABALVER=1.18 GHCVER=7.8.4
      compiler: ": #GHC 7.8.4"
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.1
      compiler: ": #GHC 7.10.1"
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.1], sources: [hvr-ghc]}}
    - env: CABALVER=head GHCVER=head
      compiler: ": #GHC HEAD"
      addons: {apt: {packages: [cabal-install-head,ghc-head], sources: [hvr-ghc]}}
  allow_failures:
    - env: CABALVER=head GHCVER=head

# Note: the distinction between `before_install` and `install` is not
#       important.
before_install:
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - cabal --version

install:
 - travis_retry cabal update
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
 - cabal install --only-dependencies --enable-tests

# Here starts the actual work to be performed for the package under
# test; any command which exits with a non-zero exit code causes the
# build to fail.
script:
 # -v2 provides useful information for debugging
 - cabal configure -v2 --enable-tests

 # this builds all libraries and executables
 # (including tests/benchmarks)
 - cabal build
 - cabal test

 # tests that a source-distribution can be generated
 - cabal sdist

 # check that the generated source-distribution can be built & installed
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi

# EOF
